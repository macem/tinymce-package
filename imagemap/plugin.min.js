/**
 * plugin.js
 *
 * Copyright, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*global tinymce:true */

tinymce.PluginManager.add('imagemap', function(editor, url) {

  function showDialog(imageList) {
    var win, data, dom = editor.dom, imgElm = editor.selection.getNode();
    var width, height, imageListCtrl;


    // Simple default dialog
    win = editor.windowManager.open({
      title: 'Insert/edit image',
      width: '900px',
      height: '710px',
      inline: true,
      url: url + '/modal.html',
      buttons: [{
        text: 'Ok',
        onclick: function() {
          editor.execCommand('mceImageMapInsert');
        }
      },{
        text: 'Close',
        onclick: 'close'
      }]
    }, {
      src: imgElm.getAttribute('src'),
      width: imgElm.width,
      height: imgElm.height
    });
  }

  function stateToggle() {
    var self = this, selected,
      check = function() {
        selected = editor.selection.getNode();
        self.disabled(selected.tagName !== 'IMG');
      };

    editor.on('nodeChange', check);
  }

  editor.on('preInit', function() {
    var body = editor.getBody() || editor.bodyElement;

    // prevent to click area
    editor.dom.bind(body, 'click', function(e) {
      if (e.target.tagName === 'AREA') {
        e.preventDefault();
        return false;
      }
    });
  });

  editor.addButton('imagemap', {
    icon: true,
    image: url + '/img/icon.gif',
    tooltip: 'Insert/edit image map',
    onclick: showDialog,
    stateSelector: 'img[usemap]',
    onPostRender: stateToggle,
    disabled: true
  });

  editor.addMenuItem('imagemap', {
    icon: 'imagemap',
    text: 'edit image map',
    onclick: showDialog,
    context: 'insert',
    prependToContext: true
  });
});